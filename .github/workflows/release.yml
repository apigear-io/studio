name: release

on:
  push:
    tags:
      - "v*"

env:
  GITHUB_AUTH_TOKEN: ${{ secrets.WOLFGANG_REPO_PACKAGE_READ }}
  GOPRIVATE: "github.com/apigear-io/*"
  GH_ACCESS_TOKEN: ${{ secrets.APIGEAR_REPOS }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  wails_version: latest
  go_version: "1.19.x"
  node_version: "16.x"
jobs:
  build-windows:
    runs-on: windows-latest
    env:
      artifact: apigear-studio-${{github.ref_name}}-windows-amd64.zip
      platform: windows/amd64
      installer: 'ApiGear-Studio-amd64-installer.exe'
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: ${{env.go_version}}
      - uses: actions/setup-node@v2
        with:
          node-version: ${{env.node_version}}
      - run: go install github.com/wailsapp/wails/v2/cmd/wails@${{env.wails_version}}
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - run: git config --global url."https://jryannel:${{env.token}}@github.com".insteadOf "https://github.com"
        shell: bash
        env:
          token: ${{ secrets.APIGEAR_REPOS }}
      - run: wails build -nsis --platform ${{env.platform}}
      - uses: thedoctor0/zip-release@main
        with:
          type: 'zip'
          directory: build
          path: bin 
          filename: ${{env.artifact}}
          exclusions: '*-installer.exe'
      - run: ls -lR build
        shell: bash
      - uses: actions/upload-artifact@v3
        with:
          name: windows
          path: |
            build/${{env.artifact}}
            build/bin/${{env.installer}}
          retention-days: 5
  build-linux:
    runs-on: ubuntu-latest
    env:
      artifact: apigear-studio-${{github.ref_name}}-linux-amd64.zip
      platform: linux/amd64
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: ${{env.go_version}}
      - uses: actions/setup-node@v2
        with:
          node-version: ${{env.node_version}}
      - run: go install github.com/wailsapp/wails/v2/cmd/wails@${{env.wails_version}}
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - run: sudo apt update && sudo apt install -y libgtk-3-dev libwebkit2gtk-4.0-dev
      - run: git config --global url."https://jryannel:${{env.token}}@github.com".insteadOf "https://github.com"
        shell: bash
        env:
          token: ${{ secrets.APIGEAR_REPOS }}
      - run: wails build --platform ${{env.platform}}
      - uses: thedoctor0/zip-release@main
        with:
          type: 'zip'
          directory: build
          path: bin 
          filename: ${{env.artifact}}
      - run: ls -lR build
        shell: bash
      - uses: actions/upload-artifact@v3
        with:
          name: linux
          path: build/${{env.artifact}}
          retention-days: 5
  # build-macos:
  #   runs-on: macos-latest
  #   env:
  #     artifact: apigear-studio-${{github.ref_name}}-darwin-universal.zip
  #     platform: darwin/universal
  #   steps:
  #     - uses: actions/setup-go@v3
  #       with:
  #         go-version: ${{env.go_version}}
  #     - uses: actions/setup-node@v2
  #       with:
  #         node-version: ${{env.node_version}}
  #     - run: go install github.com/wailsapp/wails/v2/cmd/wails@${{env.wails_version}}
  #     - uses: actions/checkout@v3
  #       with:
  #         fetch-depth: 0
  #     - run: git config --global url."https://jryannel:${{env.token}}@github.com".insteadOf "https://github.com"
  #       shell: bash
  #       env:
  #         token: ${{ secrets.APIGEAR_REPOS }}
  #     - run: wails build --platform ${{env.platform}}
  #     - uses: thedoctor0/zip-release@main
  #       with:
  #         type: 'zip'
  #         directory: build
  #         path: bin 
  #         filename: ${{env.artifact}}
  #     - run: ls -lR build
  #       shell: bash
  #     - uses: actions/upload-artifact@v3
  #       with:
  #         name: macos
  #         path: build/${{env.artifact}}
  #         retention-days: 5
  release:
    runs-on: ubuntu-latest
    # needs: [build-windows, build-linux, build-macos]
    needs: [build-windows, build-linux]
    permissions:
      contents: write
      packages: write
    steps:
      - run: git config --global url."https://jryannel:${TOKEN}@github.com".insteadOf "https://github.com"
        env:
          TOKEN: ${{ secrets.APIGEAR_REPOS }}
        shell: bash
      - uses: actions/download-artifact@v3
      - name: show dir
        run: ls -lR
        shell: bash
      - uses: softprops/action-gh-release@v1
        with:
          files: |
            ./windows/apigear-studio-${{github.ref_name}}-windows-amd64.zip
            ./linux/apigear-studio-${{github.ref_name}}-linux-amd64.zip
            ./windows/ApiGear-Studio-amd64-installer.exe
          body: "release for apigear-studio ${{github.ref_name}}"          
          repository: "apigear-io/studio-releases"
          token: ${{ secrets.APIGEAR_REPOS }}


