name: release

on:
  push:
    tags:
      - "v*"

env:
  GITHUB_AUTH_TOKEN: ${{ secrets.WOLFGANG_REPO_PACKAGE_READ }}
  GOPRIVATE: "github.com/apigear-io/*"
  GH_ACCESS_TOKEN: ${{ secrets.APIGEAR_REPOS }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    name: build os=${{ matrix.os }} go=${{ matrix.go-version }} node=${{ matrix.node-version }}
    strategy:
      fail-fast: true
      matrix:
        go-version: [1.19.x]
        node-version: [16.x]
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            artifact: apigear-studio-${{github.ref_name}}-linux-amd64.zip
            platform: linux/amd64
          - os: macos-latest
            artifact: apigear-studio-${{github.ref_name}}-macos-universal.zip
            platform: darwin/universal
          - os: windows-latest
            artifact: apigear-studio-${{github.ref_name}}-windows-amd64.zip
            platform: windows/amd64
    runs-on: ${{matrix.os}}
    steps:
      - name: setup go
        uses: actions/setup-go@v3
        with:
          go-version: ${{matrix.go-version}}
      - name: setup nodejs
        uses: actions/setup-node@v2
        with:
          node-version: ${{matrix.node-version}}
      - name: setup wails
        run: go install github.com/wailsapp/wails/v2/cmd/wails@latest
      - name: setup webkit
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt update && sudo apt install -y libgtk-3-dev libwebkit2gtk-4.0-dev
      - name: checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: patch git # needed to get access to our internal private repos
        env:
          TOKEN: ${{ secrets.APIGEAR_REPOS }}
        run: git config --global url."https://jryannel:${TOKEN}@github.com".insteadOf "https://github.com"
        shell: bash
      - name: wails build
        run: wails build --platform ${{matrix.platform}}
      - name: archive
        uses: thedoctor0/zip-release@main
        with:
          type: 'zip'
          directory: build
          path: bin 
          filename: ${{matrix.artifact}}
      - name: show dir
        run: ls -lR build
        shell: bash
      - name: upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{matrix.artifact}}
          path: build/${{matrix.artifact}}
          retention-days: 5
  release:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write
    steps:
      - name: download all artifacts
        uses: actions/download-artifact@v3
      - name: changelog
        id: changelog
        uses: mikepenz/release-changelog-builder-action@v3
      - name: show dir
        run: ls -lR
        shell: bash
      - name: create release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "apigear-studio-*.zip"
          body: ${{ steps.changelog.outputs.changelog }}
