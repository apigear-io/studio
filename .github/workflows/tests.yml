# run on all pushes (but not push tags)
# see https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#running-your-workflow-only-when-a-push-to-specific-branches-occurs

on:
  pull_request:
    branches:
      - main

name: tests

env:
  wails_version: "v2.10.1"
  go_version: "1.24.x"
  node_version: "20.x"

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v4
        with:
          go-version: ${{env.go_version}}
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{env.go_version}}-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-go-${{env.go_version}}-
      - run: go test ./... --tags bindings

  dry-run-release:
    name: ${{ matrix.config.name }} release dry-run
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: true
      matrix:
        config:
          - { name: "Windows Latest", os: windows-latest, artifact: ApiGear-Studio_windows_amd64.zip, platform: windows/amd64, wails_flags: "-nsis" }
          - { name: "Ubuntu Latest", os: ubuntu-latest, artifact: ApiGear-Studio_linux_amd64.zip, platform: linux/amd64, wails_flags: "--tags 'webkit2_41'"}
          - { name: "macOS Latest", os: macos-latest, artifact: ApiGear-Studio_darwin_amd64.zip, platform: darwin/amd64}
    steps:
      - uses: actions/setup-go@v5
        with:
          go-version: ${{env.go_version}}
      - uses: actions/setup-node@v4
        with:
          node-version: ${{env.node_version}}
      - run: go install github.com/wailsapp/wails/v2/cmd/wails@${{env.wails_version}}
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install dependencies
        if: ${{ matrix.config.os == 'ubuntu-latest'}}
        run: sudo apt update && sudo apt install -y libgtk-3-dev libwebkit2gtk-4.1-dev
      - run: wails build ${{ matrix.config.wails_flags}} --platform ${{ matrix.config.platform}} -ldflags="-X 'main.version=${{github.ref_name}}' -X 'main.commit=${{github.sha}}' -X 'main.date='"
      - uses: thedoctor0/zip-release@main
        with:
          type: "zip"
          directory: build/bin
          filename: ${{ matrix.config.artifact}}
          exclusions: "*-installer.exe"
      - run: ls -lR build
        shell: bash
      - uses: actions/upload-artifact@v4
        with:
          name: ApiGear-Studio-${{ matrix.config.os }}
          path: build/bin/ApiGear-Studio*
          retention-days: 1
